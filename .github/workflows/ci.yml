name: CI

on: 
  push:
    branches:
      - main
      - release/**

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - release/**

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
      
    - name: Setup .NET Core v5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    
    - name: Setup .NET Core v6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.100'

    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        useConfigFile: true
        configFilePath: gitversion.yml

    - name: Build - CI
      run: |
        $adjustedPackageVersion="${{ steps.gitversion.outputs.semVer }}".ToLower();
        dotnet pack -c Release -p:PackageVersion=$adjustedPackageVersion -p:Version=${{ steps.gitversion.outputs.assemblySemVer }} -o .\artifacts UnoCheck\UnoCheck.csproj

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: NuGet
        path: .\artifacts

  testwin:
    name: Validate Tool - Windows
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: NuGet

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.x'
    
      - name: GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true
          configFilePath: gitversion.yml

      - name: Install and Run Tool
        shell: pwsh
        run: |
          Write-Output "PACKAGE VERSION: ${{ steps.gitversion.outputs.semVer }}"
          $ProgressPreference = 'SilentlyContinue'
          & dotnet --list-sdks
          & dotnet tool install --global --version ${{ steps.gitversion.outputs.semVer }} --add-source NuGet\ uno.check
          & uno-check --ci --fix --non-interactive --verbose --skip xcode --skip openjdk --skip vswin --skip vsmac --skip wsl --skip edgewebview2 --manifest manifests\uno.ui-preview.manifest.json

  testmac:
    name: Validate Tool - macOS
    needs: build
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: NuGet

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.x'
    
      - name: GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true
          configFilePath: gitversion.yml

      - name: Install GTK+3
        shell: pwsh
        run: |
          brew install gtk+3

      - name: Install and Run Tool
        shell: pwsh
        run: |
          Write-Output "PACKAGE VERSION: ${{ steps.gitversion.outputs.semVer }}"
          $ProgressPreference = 'SilentlyContinue'
          & dotnet --list-sdks
          & dotnet tool install --global --version ${{ steps.gitversion.outputs.semVer }} --add-source NuGet/ uno.check
          & uno-check --ci --fix --non-interactive --verbose --skip xcode --skip gtk3 --skip openjdk --skip vswin --skip vsmac --skip wsl --skip edgewebview2 --manifest manifests/uno.ui-preview.manifest.json

  testlinux:
    name: Validate Tool - Linux
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: NuGet

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.x'
    
      - name: GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true
          configFilePath: gitversion.yml

      - name: Install GTK+3
        shell: pwsh
        run: |
          sudo apt update
          sudo apt install libgtk-3-dev

      - name: Install and Run Tool
        shell: pwsh
        run: |
          Write-Output "PACKAGE VERSION: ${{ steps.gitversion.outputs.semVer }}"
          $ProgressPreference = 'SilentlyContinue'
          & dotnet tool install --global --version ${{ steps.gitversion.outputs.semVer }} --add-source NuGet/ uno.check
          & uno-check --ci --fix --non-interactive --verbose --skip xcode --skip openjdk --skip vswin --skip vsmac --skip wsl --skip edgewebview2 --manifest manifests/uno.ui-preview.manifest.json

  publish:
    name: Publish
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')) }}
    runs-on: windows-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: NuGet
          path: artifacts

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup SignClient
        run: |
          dotnet tool install --tool-path build SignClient

      - name: SignClient
        run: |
          build\SignClient sign -i artifacts\*.nupkg -c build\SignClient.json -r "${{ secrets.SIGN_CLIENT_USER }}" -s "${{ secrets.SIGN_CLIENT_SECRET }}" -n "Uno.Check" -d "Uno.Check" -u "https://github.com/unoplatform/uno.check"

      - name: NuGet Push
        run: |
          dotnet nuget push artifacts\*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_ORG_API_KEY }}
